#include <iostream> // Подключаем стандартную библиотеку ввода/вывода
#include <Windows.h> // Подключаем стандартную библиотеку для работы с русским языком
#include <cstdlib> // Подключаем стандартную библиотеку в которой у нас хранится функции rand()/srand()
using namespace std; // Используем пространство имён std, чтобы не обращаться к его функциям каждый раз через std::

class CYcel // Создаём класс для нашего массива, по нему будем вызывать генерацию новых массивов. 
            // Класс здесь не обязателен, но через него удобнее организовывать вызов в больших программах.
{
public: static void Mass() // Создаём функцию при вызове которой каждый раз будет создаваться новый массив чисел
{
    srand(time(NULL)); //Вызываем функцию srand для того чтобы каждый раз генерировались новые числа

    const int ROW = 5; // Объявляем константную переменную хранящую число строк массива
    const int COL = 5; // Объявляем константную переменную хранящую число столбцов массива

    int arr[ROW][COL]; // Объявляем массив с параметрами строк и столбцов

    for (int i = 0; i < ROW; i++) // с помощью цикла for перебираем строки массива 
    {
        for (int j = 0; j < COL; j++) // тоже делаем с колонками(столбцами)
        {
            arr[i][j] = rand() % 10; // Присваиваем каждой ячейке памяти массива какое-то значение полученное функцией rand()
            // Через % 10 устанавливаем верхнюю границу числа, т.е. каждое число в массиве не должно превышать 9
        }
    }

    for (int i = 0; i < ROW; i++) // ещё раз с помощью цикла for перебираем строки массива после получения ими случайных значений
    {
        for (int j = 0; j < COL; j++) // тоже делаем с колонками
        {
            cout << arr[i][j] << "\t"; // Выводим массив на экран в виде таблицы
        }

        cout << endl; // делаем отступ между колонками
    }
}
};

int main()
{
    SetConsoleCP(1251); // Говорим программе что в ней будет использоваться русский язык
    SetConsoleOutputCP(1251); // Без этих функций наша программа будет читать и выдавать ответы в виде %^&&%$@! - различных ненужных символов

    char enter; // Создаём строковую переменную которая будет считывать и хранить ответ пользователя с клавиатуры

    

    while (1) // Создаём цикл While для того, чтобы наша программа не закрылась после того как отработает 1 раз
    {
        CYcel a; // Создаём объект класса CYcel для вызова функции данного класса

        cout << "Сгенерировать новый массив? Y" << endl; // Интерактив для пользователя, чтоб он понимал что от него хочет программа

        cin >> enter; // Передаём ответ пользователя в ранее созданную переменную класса string: enter

        if (enter == 'Y' || 'y') //Проверяем ответ пользователя, если Y, вызовется функция генерации массива, цикл отработает один раз,                                
        {                        //сгенерирует нашу матрицу(массив) и выведет её на экран
                                 // после чего спросит нужна ли нам ещё одна матрица?
            a.Mass();            // вызываем функцию генерации нового массива           
        }
    }
}